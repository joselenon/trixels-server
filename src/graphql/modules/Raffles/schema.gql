type RafflePrivacyInfo {
  mode: String
  type: String
}

type RaffleWinnersBetsInfo {
  betRef: BetToFrontEnd
  hash: String
  drawnNumber: Int
}

type RaffleToFrontEndInfo {
  bets: [BetToFrontEnd]!
  ticketPrice: Float!
  totalTickets: Int!
  prizesTotalValue: Float!
  privacy: RafflePrivacyInfo!
  prizes: String!
  winnersBetsInfo: [RaffleWinnersBetsInfo]
}

type WinnerBetInfo {
  betRef: BetToFrontEnd
  hash: String
}

type RaffleToFrontEnd {
  gameId: String!
  createdBy: BetterInfo!
  createdAt: String!
  finishedAt: String
  status: String
  type: String!
  description: String!
  info: RaffleToFrontEndInfo!
}

type GetRafflesResponseData {
  activeRaffles: [RaffleToFrontEnd]!
  endedRaffles: [RaffleToFrontEnd]!
}

type RaffleResponse {
  success: Boolean!
  message: String!
  data: GetRafflesResponseData!
}

type BetToFrontEnd {
  amountBet: Float
  createdAt: String
  gameId: String
  info: BetInfo
  prize: Float
  userRef: BetterInfo
}

type BetInfo {
  randomTicket: Boolean
  tickets: [Int]!
  type: String
}

type BetterInfo {
  avatar: String
  username: String
  userId: String
}

type Query {
  getRaffles: RaffleResponse!
}

type Subscription {
  getLiveRaffles: RaffleResponse!
}
